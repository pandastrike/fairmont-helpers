"use strict";

var _assert = require("assert");

var _assert2 = _interopRequireDefault(_assert);

var _amen = require("amen");

var _object = require("../src/object");

var _type = require("../src/type");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(async function () {
  return (0, _amen.print)((await (0, _amen.test)("object helpers", [(0, _amen.test)("include/extend", function () {
    var a, b;
    a = {
      x: 1,
      y: 2
    };
    b = {
      z: 3
    };
    (0, _object.include)(a, b);
    return _assert2.default.deepEqual(a, {
      x: 1,
      y: 2,
      z: 3
    });
  }), (0, _amen.test)("merge", function () {
    var a, b, c;
    a = {
      x: 1,
      y: 2
    };
    b = {
      z: 3
    };
    c = (0, _object.merge)(a, b);
    _assert2.default.deepEqual(a, {
      x: 1,
      y: 2
    });
    return _assert2.default.deepEqual(c, {
      x: 1,
      y: 2,
      z: 3
    });
  }), (0, _amen.test)("clone", function (scenario) {
    scenario = function (original) {
      return function () {
        var copy;
        copy = (0, _object.clone)(original);
        (0, _assert2.default)(original !== copy);
        return _assert2.default.deepEqual(original, copy);
      };
    };
    return [(0, _amen.test)("shallow", scenario({
      x: 1,
      y: 2
    })), (0, _amen.test)("deep", [(0, _amen.test)("simple", scenario({
      x: 1,
      y: {
        z: 3
      }
    })), (0, _amen.test)("with regexp", scenario({
      x: 1,
      y: {
        z: /foo/gi
      }
    }))])];
  }(null)), (0, _amen.test)("equal", function () {
    (0, _assert2.default)((0, _object.equal)(1, 1));
    (0, _assert2.default)(!(0, _object.equal)(1, 2));
    (0, _assert2.default)((0, _object.equal)(" ", " "));
    (0, _assert2.default)(!(0, _object.equal)("", " "));
    (0, _assert2.default)((0, _object.equal)({
      x: 1
    }, {
      x: 1
    }));
    (0, _assert2.default)(!(0, _object.equal)({
      x: 1
    }, {
      x: 2
    }));
    (0, _assert2.default)((0, _object.equal)([1, 2, 3], [1, 2, 3]));
    return (0, _assert2.default)(!(0, _object.equal)([1, 2, 3], [1, 2, 3, 4]));
  }), (0, _amen.test)("property", function () {
    return (0, _assert2.default)((0, _object.property)("x", {
      x: 1
    }) === 1);
  }), (0, _amen.test)("bind", function () {
    return (0, _assert2.default)((0, _object.bind)(function () {
      return this.x;
    }, {
      x: 1
    })() === 1);
  }), (0, _amen.test)("detach", function () {
    return _assert2.default.deepEqual((0, _object.detach)(Array.prototype.sort)([5, 4, 3, 2, 1]), [1, 2, 3, 4, 5]);
  }), (0, _amen.test)("properties", function () {
    var a;
    (0, _object.properties)(a = {}, {
      x: {
        get: function () {
          return this._x;
        },
        set: function (x) {
          return this._x = x;
        }
      }
    });
    a.x = 1;
    (0, _assert2.default)(a._x === 1);
    a._x = 2;
    return (0, _assert2.default)(a.x === 2);
  }), (0, _amen.test)("methods", function () {
    var a;
    (0, _object.methods)(a = {}, {
      x: function () {
        return true;
      },
      y: function () {
        return false;
      }
    });
    return (0, _assert2.default)(a.x() && !a.y());
  }), (0, _amen.test)("has", function () {
    (0, _assert2.default)((0, _object.has)("x", {
      x: 1
    }));
    return (0, _assert2.default)(!(0, _object.has)("y", {
      x: 1
    }));
  }), (0, _amen.test)("keys", function () {
    return _assert2.default.deepEqual((0, _object.keys)({
      x: 1,
      y: 2
    }), ["x", "y"]);
  }), (0, _amen.test)("values", function () {
    return _assert2.default.deepEqual((0, _object.values)({
      x: 1,
      y: 2
    }), [1, 2]);
  }), (0, _amen.test)("pairs", function () {
    return _assert2.default.deepEqual((0, _object.pairs)({
      a: 1,
      b: 2,
      c: 3
    }), [["a", 1], ["b", 2], ["c", 3]]);
  }), (0, _amen.test)("pick", function () {
    return _assert2.default.deepEqual((0, _object.pick)(function (k, v) {
      return v != null;
    }, {
      x: 1,
      y: null
    }), {
      x: 1
    });
  }), (0, _amen.test)("omit", function () {
    return _assert2.default.deepEqual((0, _object.omit)(function (k, v) {
      return v != null;
    }, {
      x: 1,
      y: null
    }), {
      y: void 0
    });
  }), (0, _amen.test)("query", function () {
    (0, _assert2.default)((0, _object.query)({
      x: 1
    }, {
      x: 1,
      y: 2
    }));
    (0, _assert2.default)(!(0, _object.query)({
      x: 2
    }, {
      x: 1,
      y: 2
    }));
    (0, _assert2.default)((0, _object.query)(1, 1));
    return (0, _assert2.default)(!(0, _object.query)(1, 2));
  }), (0, _amen.test)("toJSON/fromJSON", function () {
    return _assert2.default.deepEqual((0, _object.fromJSON)((0, _object.toJSON)({
      x: 1,
      y: 2
    })), {
      x: 1,
      y: 2
    });
  })])));
})();
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=object.coffee